<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="LaunchApplicationForm" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="OpenApplicationForm" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1474628009000</longProp>
        <longProp name="ThreadGroup.end_time">1474628009000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers"/>
        </HeaderManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/competition/1/details</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/competition/1/info/eligibility</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/create/check-eligibility/1</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/create-authenticated/1</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?SAMLRequest=fZJRT8IwFIX%2FytJ31m6Cg4aRIDxIgrKw6YMvppQLa%2Bza2duh%2FnsHw4iJ4fme%2B91zTu4YRaVrPm18adbw3gD64LPSBvlpkJLGGW4FKuRGVIDcS55PH5Y8DhmvnfVWWk2CKSI4r6yZWYNNBS4Hd1ASntbLlJTe18gpVTsMt3AIlTH2IDw0b6F1e5qXarOxGnwZIlp6pMc0W%2BUFCeatHWXEEfyLEa3X%2FzhqW9PW0U5pOEPWsFUOpKd5viLBYp6S10Esd7uhHErGRn0phWSSCQminySxSBLWyhAbWBj0wviUxCy67bFRL74pIsZZzAfRCwmyc%2FA7ZbbK7K%2B3tOlEyO%2BLIut1wZ7B4SlUKyCT8bFrfjrsLtq%2FjhU%2FlZPJ9YLH9ALf3ar5Y8tbzDOrlfwKplrbj5mDdiUlEaGTbuXvW0y%2BAQ%3D%3D&amp;RelayState=ss%3Amem%3A878a323b6bc68b23d47d97221141580fb07260144c3684a9d9587237a7667d04</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/Shibboleth.sso/SAML2/POST</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/contributors/invite?newApplication</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/question/9</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/saveFormElement</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/question/11</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/question/12</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/question/1</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https:/application/30/form/question/2</stringProp>
              <stringProp name="Authorization.username">ifs</stringProp>
              <stringProp name="Authorization.password">Fund1ng</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">ifs:Fund1ng@ifs.dev.innovateuk.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">login_test_data.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">username,password</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OpportunityDetailsPage" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/competition/1/details</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e1s1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BeforeApply" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/competition/1/info/eligibility</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/competition/1/details</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateApplication" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/application/create/check-eligibility/1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/competition/1/info/eligibility</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11 /application/create-authenticated/1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/application/create-authenticated/1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/application/create/check-eligibility/1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12 /idp/profile/SAML2/Redirect/SSO" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SAMLRequest" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">SAMLRequest</stringProp>
                <stringProp name="Argument.value">fZJRT8IwFIX/ytJ31m6Cg4aRIDxIgrKw6YMvppQLa+za2duh/nsHw4iJ4fme+91zTu4YRaVrPm18adbw3gD64LPSBvlpkJLGGW4FKuRGVIDcS55PH5Y8DhmvnfVWWk2CKSI4r6yZWYNNBS4Hd1ASntbLlJTe18gpVTsMt3AIlTH2IDw0b6F1e5qXarOxGnwZIlp6pMc0W+UFCeatHWXEEfyLEa3X/zhqW9PW0U5pOEPWsFUOpKd5viLBYp6S10Esd7uhHErGRn0phWSSCQminySxSBLWyhAbWBj0wviUxCy67bFRL74pIsZZzAfRCwmyc/A7ZbbK7K+3tOlEyO+LIut1wZ7B4SlUKyCT8bFrfjrsLtq/jhU/lZPJ9YLH9ALf3ar5Y8tbzDOrlfwKplrbj5mDdiUlEaGTbuXvW0y+AQ==</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="RelayState" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">RelayState</stringProp>
                <stringProp name="Argument.value">ss:mem:878a323b6bc68b23d47d97221141580fb07260144c3684a9d9587237a7667d04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">auth.dev.innovateuk.org</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/idp/profile/SAML2/Redirect/SSO</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/application/create/check-eligibility/1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginPage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="execution" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">execution</stringProp>
                <stringProp name="Argument.value">e2s1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">auth.dev.innovateuk.org</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/idp/profile/SAML2/Redirect/SSO</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/application/create/check-eligibility/1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14 /alert/findAllVisibleByType/MAINTENANCE" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/alert/findAllVisibleByType/MAINTENANCE</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginasExistingUser" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="j_username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">j_username</stringProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="j_password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">j_password</stringProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_eventId_proceed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_eventId_proceed</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">auth.dev.innovateuk.org</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17 /Shibboleth.sso/SAML2/POST" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="RelayState" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">RelayState</stringProp>
                <stringProp name="Argument.value">ss%3Amem%3A878a323b6bc68b23d47d97221141580fb07260144c3684a9d9587237a7667d04</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="SAMLResponse" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SAMLResponse</stringProp>
                <stringProp name="Argument.value">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpSZXNwb25zZSBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9pZnMuZGV2Lmlubm92YXRldWsub3JnL1NoaWJib2xldGguc3NvL1NBTUwyL1BPU1QiIElEPSJfMzRlNDQyMGJmYjI1NWE2YzA0NmNjN2I2YzQzYWYxMWYiIEluUmVzcG9uc2VUbz0iXzUyY2ZmOGM4YzAwOTRjY2FjMGMwYWNlYTQ3NzJhNzcwIiBJc3N1ZUluc3RhbnQ9IjIwMTYtMDktMjNUMTA6MDM6MDcuNjU5WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sMnA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI%2BPHNhbWwyOklzc3VlciB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI%2BaHR0cHM6Ly9hdXRoLmRldi5pbm5vdmF0ZXVrLm9yZy9pZHAvc2hpYmJvbGV0aDwvc2FtbDI6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgo8ZHM6U2lnbmVkSW5mbz4KPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGE1MTIiLz4KPGRzOlJlZmVyZW5jZSBVUkk9IiNfMzRlNDQyMGJmYjI1NWE2YzA0NmNjN2I2YzQzYWYxMWYiPgo8ZHM6VHJhbnNmb3Jtcz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8%2BCjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KPC9kczpUcmFuc2Zvcm1zPgo8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhNTEyIi8%2BCjxkczpEaWdlc3RWYWx1ZT5yeDRRUVhNMkFSd3lQR09IVDV4bjBnVVhHanJFYWt3QnhRQkQxMVJZSHBoVmo4Z3NISGN2OFVRRmNpT2VTbDhpVVRiU2pSaUplcWVnClJtTk5EbERWTFE9PTwvZHM6RGlnZXN0VmFsdWU%2BCjwvZHM6UmVmZXJlbmNlPgo8L2RzOlNpZ25lZEluZm8%2BCjxkczpTaWduYXR1cmVWYWx1ZT4KRFY3SFVjay9Rd2tPb0xiNFFHVW1SZXg5L1BVT0tSbjlLN2J3dnRFRVNJMitIZ1BGMUw4cFIzUGIxZnYrRWlnR2NsSmJBU0ZhcDhQUAp1UlYzcEQ2T0o4cnJMUzMxb1NJdGlzVURXUFpCL280Q01obU03NXBmbVk0TWU1TUx3dVd6YXk5QStHb2tFT3UrZ01XTnVXNXBSN09kCmRlcDF1MjQ1N21vYmFjTWRVQ2pISUNzemhUb0h6NWtQNkwwN1ArV0krNEN5dzNpNkVuaXI4WEFjMmRONTZQMERob1hBbVE3RkxWNkkKTktacXc2dlhZSFZKWENiNW9pRDF5OU1OaCs5Vk5iN3pFN1kzU1dTSDVwRGwreWZwbzdrVm81UjBGaWFwT0poRnFXSStPWWp1Y2xobwpMdlQ2TGVSYnVyVWdoSVRpZU5wajJoTHdFaW1hQXNLbmVXSmJiZz09CjwvZHM6U2lnbmF0dXJlVmFsdWU%2BCjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmljYXRlPk1JSURSRENDQWl5Z0F3SUJBZ0lWQUp0UTRuWDJjR1d4ZDFmVitaSzFOcE8zSWM4NE1BMEdDU3FHU0liM0RRRUJDd1VBTUNFeEh6QWQKQmdOVkJBTU1GbWxrY0M1a1pYWXVhVzV1YjNaaGRHVjFheTV2Y21jd0hoY05NVFl3TWpBeU1USTFNRE0wV2hjTk16WXdNakF5TVRJMQpNRE0wV2pBaE1SOHdIUVlEVlFRRERCWnBaSEF1WkdWMkxtbHVibTkyWVhSbGRXc3ViM0puTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBclk0c2Y2UHBxNkJYYS9zQUV1SUcydFY3YWpWNW9FMjh6SkErb1duVnludS9OZUphalpDVDRINngKL1EyOGZmZjdpYXBtRzQya3VrL0pGcFEvZXNoenRKdGN1WlFQOXZ6VWJwNHYxRXIyVUxFVVN2OEI0ZXhFRi9ITkJQUktYc2JhK0FTZgoyN2dVYm5CUUlhSHJ0Rmx5dlV0OHdteHdZK04zYzRDWkRjNjdLVVZGSzI1WCs0cUlDRm8rUHRteHBKcW5OZnNCVHMvem5mR0R2ZUcyCnJkNG5uTG93a1ZFdlh2VnJuZ0QxdjZiNksyQWZZRlozSnZHZnZFWERwN2JaL1VmL0RKMHQ3Z0ViV09BS1BsK1N0SGNwOEN3VU9nSXEKTm5aam1vVnRLY0daV01pTjBBMC8rdHJidE4yM2psTUVqT2Zaai9ZcjNLa0RIZERUL1Q1WW5qQzIxUUlEQVFBQm8zTXdjVEFkQmdOVgpIUTRFRmdRVWZiQXA4R1Y2S3JZYTh1WmRReDVHVytYTFpad3dVQVlEVlIwUkJFa3dSNElXYVdSd0xtUmxkaTVwYm01dmRtRjBaWFZyCkxtOXlaNFl0YUhSMGNITTZMeTlwWkhBdVpHVjJMbWx1Ym05MllYUmxkV3N1YjNKbkwybGtjQzl6YUdsaVltOXNaWFJvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQ1ZsZ3oxVEhnb1R3VXVzZGVmbGk3TEs0L1E3djQ5aTNtcS9URHF6Mkh0Y1ZGM0lBSGJXVWtQZ2tRUwpvWU8waER0MzUyWWhqN25xb0g1MGJFaytKOTBLR3cvaWVhWFBQeGkrVW1IelE1Vmh6RkJuelVLd3lWdUoxdE1lSmpoSVRlaUhya1BWCkxUWmlVRDVCM3I3Z1dkcjJ1c3lsaFROYyt2R2cxQzBnMXVXN0VZeWwxckRKb3I5RDJidVM5aU81cjcyVTJ3cm1kYklidUdBNWpZdncKd2lPV1BOUWJzMDc0VUNyeDhhWk9iSXptNDlCbjlDY3kra0EzKzRWNmlOak5aRUZrbTdObHc3WE1SZ2x3NFUvWmpDMHFKa1NpWFZGTQpGV0tROWd6T3dzWHF3Wm5pc0FQTWk0b3BubDNCc0E1MGhrU0x3K1NBOEswOXlFbkZLaWpFR0E4dzwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE%2BPC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxzYW1sMnA6U3RhdHVzPjxzYW1sMnA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIi8%2BPC9zYW1sMnA6U3RhdHVzPjxzYW1sMjpFbmNyeXB0ZWRBc3NlcnRpb24geG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPjx4ZW5jOkVuY3J5cHRlZERhdGEgSWQ9Il8yOTgzYzIzNmMxYzI5Y2E4ZjhkZGU1ZTE1OTQ0OGViMSIgVHlwZT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjRWxlbWVudCIgeG1sbnM6eGVuYz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48eGVuYzpFbmNyeXB0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwOS94bWxlbmMxMSNhZXMxMjgtZ2NtIiB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiLz48ZHM6S2V5SW5mbyB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI%2BPHhlbmM6RW5jcnlwdGVkS2V5IElkPSJfZDE2YmExZjg5NTRhMzExZmZjODhjN2E1MjY0MDYzZDMiIFJlY2lwaWVudD0iaHR0cHM6Ly9pZnMuZGV2Lmlubm92YXRldWsub3JnIiB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiPjx4ZW5jOkVuY3J5cHRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDA5L3htbGVuYzExI3JzYS1vYWVwIiB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSIgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiLz48eGVuYzExOk1HRiBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDkveG1sZW5jMTEjbWdmMXNoYTEiIHhtbG5zOnhlbmMxMT0iaHR0cDovL3d3dy53My5vcmcvMjAwOS94bWxlbmMxMSMiLz48L3hlbmM6RW5jcnlwdGlvbk1ldGhvZD48ZHM6S2V5SW5mbz48ZHM6WDUwOURhdGE%2BPGRzOlg1MDlDZXJ0aWZpY2F0ZT5NSUlEVmpDQ0FqNENDUURMemUwU3htYURDREFOQmdrcWhraUc5dzBCQVFzRkFEQnRNUXN3Q1FZRFZRUUdFd0pIUWpFU01CQUdBMVVFCkNBd0pXVzl5YTNOb2FYSmxNUkl3RUFZRFZRUUhEQWxUYUdWbVptbGxiR1F4RlRBVEJnTlZCQW9NREVjeVJ6TWdSR2xuYVhSaGJERWYKTUIwR0ExVUVBd3dXYVdaekxtUmxkaTVwYm01dmRtRjBaWFZyTG05eVp6QWVGdzB4TmpBeU1ETXdPVFF5TVRsYUZ3MHpNakEzTURndwpPVFF5TVRsYU1HMHhDekFKQmdOVkJBWVRBa2RDTVJJd0VBWURWUVFJREFsWmIzSnJjMmhwY21VeEVqQVFCZ05WQkFjTUNWTm9aV1ptCmFXVnNaREVWTUJNR0ExVUVDZ3dNUnpKSE15QkVhV2RwZEdGc01SOHdIUVlEVlFRRERCWnBabk11WkdWMkxtbHVibTkyWVhSbGRXc3UKYjNKbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMndmWC8rWUpUUjg3Zk43eEgvYXlmeU9oaWsvcgpDa1MyK2VzTi9kVWwrUThmbkREZzk0UW8vQ3lVeThoMzJSNjlGdnVMZ0F5SXVQTmhTb21QUnhsQW9mWXE1dUw5WkVHRUI4OTNzeVdsCmFVS2IyMTJQWW1uNUVHa0pmRXhQMXA5WE5zZGdBT2VEQkNsOWpxR3VhZkVXaTBxSkVLdWRyQ0d1ZzRUc1RPaHlCY1UrTTAzOE5ScnoKaU56em5LbXZEOWF3RU9MS2VHZHJNQnYvOHR5Z2QrbmtuQTJaYTNOSTFaQmFqYmFsRlhpNUhWbUdTWDcxR0FLQnZXbElzRElTa0xlaQpGMHcxd1c0WXBSU1BaQWVEUURobEMwNjJRWldOQmc3djc1WnNoakxNRWpqV3pMdGdkRzBkNWZQRi9XWkExdWxVcGxwZHBmaTBOd214CktDeGZvcmdKRVFJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN2RDhsMVovdjhWWXIrNlN0YTRMNkpYT3ZXb3E3VnpVeUwKMDVYUDFRVDFJN3BjaVoxRUxTRzBIOUNNK2lxUWJiUXhsNmF2b3F0L1BaOTBFR0lBZTlabHNTUERTbkpIWlhSR2NvbTFCSDY3bTJjZAptVEJlYUZxZ09CR3dJQTZyeUZhNzhlSUVvaEpDMzBjMEo4bE5xc2QrMm1EUW5oWHAvd2FacmZFWWE1TDZjT1BNbEtPdHZ3MW85UnU5CmtuRlNsOGZNR2RBVzU4czhYN1l3K2hZNjhhTHJTL1pqWnRJK3ZPLzFpSGEwbjY1MThxR1ExUEQ5RlAvZWtNVFI5WjQ0c0JTSmwvdnkKeklZS1B5QWthSE15bDNmU0x3QWFIMWEyWHIxeFNXQ2VnMlJmbXpwRThPb1RsZENJa2VLTldlbTZTbGxEdGFMbmoxK00xQ25GL0F6UwpTVjhhPC9kczpYNTA5Q2VydGlmaWNhdGU%2BPC9kczpYNTA5RGF0YT48L2RzOktleUluZm8%2BPHhlbmM6Q2lwaGVyRGF0YSB4bWxuczp4ZW5jPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyMiPjx4ZW5jOkNpcGhlclZhbHVlPm44YTFIVzVSck80RHNITTdsRXhWd3R0aFJFbXRROFBiaUhFYXh2MGFmUTJWbExxbnlGZFp3bnNVaTJJUFZrOEJWdkRiV1ZOM3hGNEkKL1g4QnFJcmwzMzlpbE1NdmNvaDNqQk9OM3psa243eVNXbHJPamtCMFlJL3paKzF5MUxlMGh5bjZFQjc3eDRDMW5JTjhobWh2TnhZTApzVWthKzkyYXZSYWF5NlFZdC9SdldrTjF2c1E1VTU0MEZIV0NPSjZZbyttbkZwUGw0YkdPaTVsRU9MTituMmxnc1pIUnFwK3llY0plClF1cWMyRFU5TW5BcXNkdlpwbXN2c25QTzhPb0FDTmREMzVsdXBZeHJyeVcwTkpWdVlqODJPK1dERFdGUjZjZ1VVUUt2R09QTVVMazAKNmtYRi8wbnVHVzlocXNHMTJ2MFNXeW5XK3lZV3JQeXk5SWVwVWc9PTwveGVuYzpDaXBoZXJWYWx1ZT48L3hlbmM6Q2lwaGVyRGF0YT48L3hlbmM6RW5jcnlwdGVkS2V5PjwvZHM6S2V5SW5mbz48eGVuYzpDaXBoZXJEYXRhIHhtbG5zOnhlbmM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jIyI%2BPHhlbmM6Q2lwaGVyVmFsdWU%2BaDd0M2N4bTZYcm1kZkNNOXpCWWxkRjE3RS9CSk83TlFiRkR4aWpuTkZ2L2hIdktxQnVFcUl1aFhjUVh1Wkg3L0twRGdXVGcyVVlVVQpMSzFOWUM0TEJzTDJLQWIvc2JBZU5DSDdkMHhnbnhRSlZpTzV3VHVvUFdIWkd0Qm9CUVJHZEtNZ0NCeVJ4aHpCcndiZTZZWUN3MEJHCmYyUkl5bFE2Sk0rd1A3RS84eUJodXNLQTdrMWVtU1NMdlI3NkhnclcvU1kwLzhaM1BOOHZHVE5QejUydGlRK096Zm0wSlpvRFE4UUsKTFFsUUVwby8rZ1pxSEk2U1c1U3VZaWhsQStrbEtlb2N6eW1EUWM3RlJwTXROQmxvRnVPbVZ3K2hvOUs0eGtDcGFQT1cwYWI0SW1OTQp3Z25ldUdBVGx5b3VBZUFQWlZFek81WDV6RmpYSG0zOHFOU0s1NmRaT2N4dGZjdkdXOTZ6aTZMUTJtV0ZwamJNQlZuNHRHTHRJRFIvCkU0MXFKd1ZZV05HWTY4VGIydWZiL3FEd1duRzR1MW5rbHVMWVZxTHdNMWVUWXloTHNRZllkL2cwTFZYLy9MbFZVdk95T3dnL1U5SE0KZitWL2lrWk1INmEvRHd3TzJ1NzVmNWVpQVQrUVdtUlAvbGdSZVFiTDNyZHB5WGtsVlpmQWtRSjVnMTJaN1NYb213algvVC9QS0RCMAoyaFFRNEhBdjkzT2l4U2kxM0pDcjFCVHY1M1ZKbkt0UmsyM1N1UFpLSEJQN3BQbzAxYXRuUTVYSlhqYW10ZmVabHprQ3ViU3RqS2JSCkNIQ25pQmVKTGhyZ3MwRmlvWTlvK2ZlUXNsZFBoNWEzRUVZLzRGbGZvNTdIemFqY0RWRWFlSkVibHZ0TGpkcTJjK25nVE5DekdYbjYKMERQVHZTSHdwR241dVJwZ3FjL25KUWpqTTc4N0V3Smt1TTVKY3kzM0VWTk9YM1ZzSWpuYy84Y3RmVWFDUUxFTTR5bElWSWhqaTlJNwpGV2xDQWQxVVdEU1V2UGVMTDRYQ2FscWxVVHppbFN4MmxxZGRnUFdwSlN0TE52Smg4QzBxbml2Q05lcmNpbEJtK3JST2J2aTJqZVJKCnlhNk9YRnJQbkpTUmR4czdoUkY4RllFZHpLQWsrc3dmYUJvL2laZFl2RnpMNWczQW5lOExxVHVXMDhCL0JibmFtQWxBVzlVYTZBRTIKczJLaVAxa2NCWlZlbTFmVCtWVkxlc1JpTzJzVGYySmNkb3JxeGJlbVdodUdJaUplUFRlN1NEV3RKNnQvdnpubkF2cEgwRG9BODZhRwowTVFjZngyalFvY2xFQWpHckJ4ZjVrUzZwaGJiSGs4V2I0L1VmVFRDclBoT3FFVlFjUmNVM203YjFyblVkWldOYXY2bUdzOXNjVUU0CnFKWXlZVUtwU3pQcUdEQmlSdTZ0dVM0UGh3ZTA0bzlYbEtPaEt6WnNMcjNRdHFUeWlvUmlUWTVjWDg1bFRmSjlWY2lJTkdkQU9xK04KYjlNMTUvY3IySGgrL2FjM29PZUJTMnk4QTFNRjhsNTVGOWNwUk0ySDVVeE1iZHZxNWY4bGVkeEZqWXI4YW4rcGtUMEQxTkw3ZzhEMwpRVVg5TUZkYUN5K1ZOeG90c1B0dEV1cCtNOTZ2MUFKTzl2VUdtenhjcTA2MEwza3c2ZGFzSTQ5dVA3K2x4UGxiMmdBV0JOQ01KSkU1CmY2Q201aUhFTGZJdThBRHZ2V2R6K3psRWFhaG9ReGhXWERWRlJEQndpR3hYREdwR2NJWmwzQUVpRnFCWTZLVzIveTBvTEllUFZDUS8Ka1FVbEVVRXI3dkNDTWFobEhXS2U1b2xpOGcwR2JoOWdKb0xPbyszRFVvTnFnU0RWVWIyckIxUDBJalJBajJxV3A2RzFBeUs1cDUydQorbkk3Wm42cHNuRVhEUFhQNnpNclFHRmxiTEhSaUR1cGdLbForUTUxZDJVdFRDTko5WmlFbUoyeGozUk96S0lLV3RJMkRUNjA2aHdsClFPRmhZdkIyMjdyV1BrTlBWazJSYThGTDdrcEkxQnRuTjlSM1RPd3NpRGlMZCtBTHA0eTZjdXhMMi90b3JRdUVsejR2ZzZmem8xdTUKWGV1K0FwSUNpRHJvSXZsOElxVEtuUnhkQWhzanI2NnBEUDJqRllSaXZlUmhvbkFVaGdqeHNvZUI3bDc5MVpxdTBqa1FsK2dzQlZqUwp4cDFiMktlUkhZVHkrRUdSdlA5bkJmQnFyMHpqM0RhMXdUV0o3R2tSQUljblNYQTlFRlphVTBhQmxkZFR6NXkyVlZwaS96N1dJMENsCkNkMGFOTlIyWVJ0Y1pXU3BHaTJsRWV1UVBmS0NLSFVxTy9nbll2T3A4Vk5YeGlFc2c3blVKZzBuYkhCNDVTdk1rOStyemRpVUY0QlkKeDZFWUxwcjQ4V0h5ZHRMWUl3TGZnZTZCTzNEM1ZJT2ZtVWZhVUtYMG5LRk8xSVZUL1ZybVJuQjVwVGlrL21KaUlLeHR4S3dlWnM2bgpBSW11bnpINGhub0dsZVFYdnNGU1cyejNWcE9TelZsb24rT29QWFdxbXhSM0NqNU5LUTVOQ1RHTjc2WUR3V3VjNkF1OUFLNkNKblc3CjcxaTFTaEwvQThkSSthT1dZVm9EelFsNDN5dW82V1FiUlNyY1NoL0d3ZXRnV3Q4TzYxVUYvR2hqZ2FpOHlERVliUXlEK0JOaTZuNUcKSjgyRGxqeHRGVWErQ0tKbEZPWGZvalF2K3o0amlSN3k1U015dEQ5WWxIbUZLeGV0NjEyNnhVQndqYlU3cWRJb3lQWFRSTFpQS1ZhUQp2ME5qak9VZTF3a3dQb0lOZWZxVkxRcm0wM3BWdUZ1ODBWd0NzQ3RyZjRla2FwblFER0hMQ0RQZ2lpWUVnZ0lma3pteW5Udmo4VndiCm1QYjBMZ2YxNnZVUGVZQ1R3Tmd3Y0JTblBaVkl0SUo5cjBRdUt2emphRDFvV29hM0pNSHZMa25mZVZnZ3Z0aUtNUFdtckhpK0xMSWUKNXJRYXJYeXV2REFJNXhlc0RmcktkRHY3aGVCYlBvQUY1TjM4eHJzWkpLMG5YdGsvWWxMUlVJcDlyc0E3bVc0RktweS9XVThjMmpIVQpVN20vRDYwNVBZa09WQjgwZEx3T0J4VndpM29uM3drS1NyTjlqUVhlNGF4OVJiZ0QzdlhvQnl1NDVIRUdHaTdONEFMYmVBaXJzNk16CmNVVlVrbU9GWkRFbTQwQ1hBYzdPSURqM25DUFNsWmhHK3lGRUVEWU5WNmIvRVFlZ3ExbE5NTDBHbW13TWEvaWV0WDR2MUtzMWtFQm8KbVFXNU5uVzgvT0xNNlVzaXI3Nkhwa1RERjVoaWxDSHIzZ2U4VkMzSDdPeG96MXlDckZ1bzRmTUxnbEFNQWQ1QXI5N3FiSDVuMCtqRQpRU0RPQ1V3ZzM2clZNRklqcTJ4cGRWQWk4UDQrK3lqMHNIcjVISTJldGVpdm5PUitKb1hFdWx5U2dDMVQvYXhVSUUrMGx0dTJPNUhpClB0bTlDU3NzMmZRQkgwVERUaDZmalpjQjZoZFA4ZzlscXA1WnhOUmhvMng4Y1hnQTdzQkpacGNicWNabHUrQUQ3MHpBaU5LYmFlUm8KWklxa1RVNnFDRUM0TnRuTkVlb05rT3BwWlczV01BQm9ETGhTYlB0bVFzVjU5UDlaSmR6eWw3UnFuUE9adlZtYVdteVJBazRjM1FlLwpwcFUrVlB5WnRpc250MUJabzQ5cGZZZWdKbDZRRzlqUnFpVnhjUkNtekpzeUtBPT08L3hlbmM6Q2lwaGVyVmFsdWU%2BPC94ZW5jOkNpcGhlckRhdGE%2BPC94ZW5jOkVuY3J5cHRlZERhdGE%2BPC9zYW1sMjpFbmNyeXB0ZWRBc3NlcnRpb24%2BPC9zYW1sMnA6UmVzcG9uc2U%2B</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Shibboleth.sso/SAML2/POST</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18 /application/create-authenticated/1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">iso-8859-1</stringProp>
          <stringProp name="HTTPSampler.path">/application/create-authenticated/1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://auth.dev.innovateuk.org/idp/profile/SAML2/Redirect/SSO?execution=e2s1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="19 /application/create-authenticated/1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="create-application" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">create-application</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="create-application-submit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">create-application-submit</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_csrf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_csrf</stringProp>
                <stringProp name="Argument.value">665c2d6553039c2bfc1068d3104585112aca3d14d6473f5eeea20295da14f0f9a225a741cc2e30e40300fe2ac5ed0d7e15f069fdd3d66cc8a49f7a9618d4b175e15c0d296bdd5869dc2305d6fc962799b9bd9bbc109004de2816916ae81c2df2bbc729244ff14c990b447ea9ee150dddbd03cea1b13380640d1029edfef60f1d</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/application/create-authenticated/1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://ifs.dev.innovateuk.org/application/create-authenticated/1</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
